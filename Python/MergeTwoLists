# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if (not l1) and (not l2):
            return []
        if (not l1) and l2:
            return l2
        if (not l2) and l1:
            return l1
        result=ListNode(0)
        cur=result
        cur.next=l1
        p_1=l1
        p_2=l2
        while p_1 and p_2:
            if p_2.val<=p_1.val:
                current=p_2
                p_2=p_2.next
                cur.next=current
                current.next=p_1
                cur=cur.next
            else:
                p_1=p_1.next
                cur=cur.next
        if (not p_1) and p_2:
            cur.next=p_2
        return result.next
